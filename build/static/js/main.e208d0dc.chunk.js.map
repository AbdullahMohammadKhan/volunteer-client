{"version":3,"sources":["images/icons/logo.png","images/header.png","components/Task/Task.js","components/Home/Home.js","components/Login/firebase.config.js","components/Login/Login.js","components/Book/Book.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/Dashboard/UserDashboard/UserDashboard.js","components/Dashboard/AdminDashboard/AdminDashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Task","task","history","useHistory","className","onClick","taskType","push","src","img","style","height","class","alt","name","Home","map","key","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","useContext","UserContext","setLoggedInUser","from","useLocation","state","pathname","firebase","length","storeAuthToken","currentUser","getIdToken","then","idToken","sessionStorage","setItem","replace","catch","error","provider","GoogleAuthProvider","signInWithPopup","result","user","displayName","email","errorMessage","message","console","log","Book","useForm","register","handleSubmit","errors","bedType","useParams","loggedInUser","textAlign","onSubmit","data","fetch","method","headers","body","JSON","stringify","res","json","success","alert","type","ref","required","placeholder","defaultValue","value","Header","backgroundImage","logo","to","PrivateRoute","children","rest","render","location","UserDashboard","useState","userList","setUserList","useEffect","list","Card","width","Body","Title","Text","date","Button","id","_id","variant","AdminDashboard","setList","book","mail","createContext","App","Provider","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e208d0dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5c655479.png\";","module.exports = __webpack_public_path__ + \"static/media/header.50ce2657.png\";","import React from 'react'\nimport { useHistory } from 'react-router-dom';\n\nconst Task = ({task}) => {\n    const history = useHistory()\n    const handleBook = (taskType) => {\n        history.push(`/book/${taskType}`);\n    }\n    return (\n        <div className=\"col-md-3\" onClick={() => handleBook(task.taskType)}>\n            <img src={task.img} style={{height: '300px'}} class=\"img-fluid ${3|rounded-top,rounded-right,rounded-bottom,rounded-left,rounded-circle,|}\" alt=\"\"/>\n    <h3>{task.name}</h3>\n        </div>\n    )\n}\n\nexport default Task\n","import React from 'react';\r\nimport Task from '../Task/Task';\r\n\r\nconst Home = () => {\r\n    \r\n    const tasks=[\r\n        {\r\n            name:\"Child support\",\r\n            img:\"https://images.pexels.com/photos/1250452/pexels-photo-1250452.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType:'ChildSupport'\r\n        },\r\n        {\r\n            name:\"Refugee support\",\r\n            img:\"https://images.pexels.com/photos/4057649/pexels-photo-4057649.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType: 'RefugeHelp'\r\n        },\r\n        {\r\n            name:\"Water support\",\r\n            img:\"https://images.pexels.com/photos/3079978/pexels-photo-3079978.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType:\"WaterService\"\r\n        },\r\n        {\r\n            name:\"Food support\",\r\n            img:\"https://images.pexels.com/photos/4393426/pexels-photo-4393426.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType:\"FoodService\"\r\n        },\r\n        {\r\n            name:\"Shelter support\",\r\n            img:\"https://images.pexels.com/photos/112378/pexels-photo-112378.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType:\"ShelterHelp\"\r\n        },\r\n        {\r\n            name:\"Study support\",\r\n            img:\"https://images.pexels.com/photos/618116/pexels-photo-618116.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType:\"StudyHelp\"\r\n        },\r\n        {\r\n            name:\"Helping Hand\",\r\n            img:\"https://images.pexels.com/photos/45842/clasped-hands-comfort-hands-people-45842.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\r\n            taskType:\"HelpingHand\"\r\n        },\r\n    ]\r\n    return (\r\n        \r\n        <>\r\n        <h1 className=\"text-center\">My Volunteer Friends</h1>\r\n        <div className=\"App row\">\r\n\r\n\r\n\r\n{\r\n    tasks.map(task =><Task key={task.taskType} task={task}/>)\r\n}\r\n\r\n        </div>  \r\n        </>  \r\n    );\r\n};\r\n\r\nexport default Home;","\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCgS05ETpL58qGSBVXSRE8iodEMY4P2mtQ\",\r\n  authDomain: \"volunteer-network-80d1d.firebaseapp.com\",\r\n  databaseURL: \"https://volunteer-network-80d1d.firebaseio.com\",\r\n  projectId: \"volunteer-network-80d1d\",\r\n  storageBucket: \"volunteer-network-80d1d.appspot.com\",\r\n  messagingSenderId: \"335743524628\",\r\n  appId: \"1:335743524628:web:cad30030253ba5beaf2c01\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import React, { useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport {UserContext} from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    \r\n    if(firebase.apps.length === 0){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            const {displayName, email} = result.user;\r\n            const signedInUser = {name: displayName, email} \r\n            setLoggedInUser(signedInUser);\r\n            storeAuthToken();\r\n          }).catch(function(error) {\r\n            const errorMessage = error.message;\r\n            console.log(errorMessage);\r\n          });\r\n    }\r\n\r\n    const storeAuthToken = () => {\r\n        firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\r\n        .then(function(idToken) {\r\n            sessionStorage.setItem('token', idToken);\r\n            history.replace(from);\r\n          }).catch(function(error) {\r\n            // Handle error\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>This is Login</h1>\r\n            <button onClick={handleGoogleSignIn}>Google Sign in</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useContext, useState,useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Book = () => {\r\nconst history = useHistory();\r\n\r\n\r\nconst { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    console.log(loggedInUser)\r\n\r\n     fetch(\"https://guarded-island-47034.herokuapp.com/registration\", {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        res.json();\r\n        \r\n      })\r\n      .then((success) => {\r\n        if (success) {\r\n          alert(\"review created successfully.\");\r\n        }\r\n      });\r\n    \r\nhistory.push(\"/userDashboard\");\r\n\r\n\r\n  };\r\n\r\n    const { bedType } = useParams();\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            \r\n\r\n          \r\n        \r\n        <form className=\"p-5\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n              name=\"name\"\r\n              placeholder=\"Full Name\"\r\n              className=\"form-control\"\r\n              defaultValue={loggedInUser.name}\r\n            />\r\n            {errors.name && (\r\n              <span className=\"text-danger\">This field is required</span>\r\n            )}\r\n          </div>\r\n           <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n              name=\"mail\"\r\n              placeholder=\"Username or Email\"\r\n              className=\"form-control\"\r\n              defaultValue={loggedInUser.email}\r\n            />\r\n            {errors.name && (\r\n              <span className=\"text-danger\">This field is required</span>\r\n            )}\r\n          </div>\r\n           <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n              name=\"date\"\r\n              placeholder=\"Date\"\r\n              className=\"form-control\"\r\n            />\r\n            {errors.name && (\r\n              <span className=\"text-danger\">This field is required</span>\r\n            )}\r\n          </div>\r\n           <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n              name=\"description\"\r\n              placeholder=\"Description\"\r\n              className=\"form-control\"\r\n              //value={description}\r\n            />\r\n            {errors.name && (\r\n              <span className=\"text-danger\">This field is required</span>\r\n            )}\r\n          </div>\r\n           <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n              name=\"type\"\r\n              placeholder=\"Service\"\r\n              className=\"form-control\"\r\n              value={bedType}\r\n            />\r\n            {errors.name && (\r\n              <span className=\"text-danger\">This field is required</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group text-right\">\r\n            {/* <Link to='/adminDashboard'> */}\r\n            <button type=\"submit\" className=\"btn btn-brand\">\r\n              Send\r\n            </button>\r\n            \r\n          </div>\r\n        </form>\r\n     \r\n\r\n\r\n\r\n\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Book;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport header from '../../images/header.png';\r\nimport logo from '../../images/icons/logo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div style={{ backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(\"https://images.pexels.com/photos/69934/firefighters-fire-flames-outside-69934.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\")` }} className=\"header\">\r\n            <nav className=\"nav\">\r\n                <ul>\r\n                    <li>\r\n                        <img className=\"logo\" src={logo} alt=\"\"/>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"\">Blog</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"btn-book\" to=\"/book\">Donation</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"btn-book\" to=\"/book\">Events</Link>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <Link to=\"/adminDashboard\">Admin</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"title-container\">\r\n               \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React,{useEffect,useState,useContext} from 'react'\nimport { UserContext } from '../../../App';\nimport {Card,Button} from \"react-bootstrap\"\n\nconst UserDashboard = () => {\n    let deleteid=(id)=>{\n        fetch(`https://guarded-island-47034.herokuapp.com/delete/${id}`,{\n            method: 'DELETE',\n\n        })\n        .then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n        })\n\n\n    }\n    const [userList, setUserList] = useState([])\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    useEffect(()=> {\n    fetch(\"https://guarded-island-47034.herokuapp.com/getRegistrationByMail\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ email: loggedInUser.email }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setUserList(data);\n        console.log(\"data:\"+data);\n      });\n  }, []);\n    return (\n        <div style={{textAlign: \"center !important\"}} className=\"container text-center align-center\">\n            <div className=\"row text-center\">  \n            </div>\n    <div>{userList.map(list=>{\n        return (\n            <Card style={{ width: '18rem' }}>\n                             {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                             <Card.Body>\n                                 <Card.Title>{list.type}</Card.Title>\n                                 <Card.Text>\n                                                 {list.date}\n                                 </Card.Text>\n                               <Button onClick={()=>deleteid((list._id))} variant=\"primary\">Cancel</Button>\n                             </Card.Body>\n                         </Card>\n        )\n    })}</div>\n            \n               \n            \n            \n          \n            \n        </div>\n    )\n}\n\nexport default UserDashboard\n","import React,{useEffect, useState} from 'react'\n\nconst AdminDashboard = () => {\n    const [list, setList] = useState([])\n     useEffect(() => {\n    fetch(\"https://guarded-island-47034.herokuapp.com/getRegistrationAll\")\n      .then((res) => res.json())\n      .then((data) => {\n        setList(data);\n        console.log(data);\n      });\n  }, []);\n    return (\n        <div>\n            adminDashboard\n            \n             {list.map(((book)=><div>{book.mail}</div>))}\n            \n        </div>\n    )\n}\n\nexport default AdminDashboard\n","import React, { createContext, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Home from './components/Home/Home';\r\nimport Login from './components/Login/Login';\r\nimport Book from './components/Book/Book';\r\nimport Header from './components/Header/Header';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport UserDashboard from './components/Dashboard/UserDashboard/UserDashboard';\r\nimport AdminDashboard from './components/Dashboard/AdminDashboard/AdminDashboard';\r\n\r\nexport const UserContext = createContext();\r\n\r\nfunction App() {\r\n  const [loggedInUser, setLoggedInUser] = useState({});\r\n  return (\r\n    \r\n      \r\n    \r\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\r\n      {/* <p>Name: {loggedInUser.name}</p> */}\r\n      <Router>\r\n          <Header/>\r\n          <Switch>\r\n            <Route path=\"/home\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <PrivateRoute path=\"/book/:bedType\">\r\n              <Book />\r\n            </PrivateRoute>\r\n            <Route to=\"/userDashboard\">\r\n              <UserDashboard/>\r\n            </Route>\r\n            <Route to=\"/adminDashboard\">\r\n              <AdminDashboard/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}